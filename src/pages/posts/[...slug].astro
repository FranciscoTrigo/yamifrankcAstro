---
import { getCollection } from 'astro:content';



export async function getStaticPaths() {
  const blogEntries = await getCollection('posts');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
const { entry } = Astro.props;

// Get GIT last modified time
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
dayjs.extend(utc);

const { Content, remarkPluginFrontmatter } = await entry.render();

const lastModified = dayjs(remarkPluginFrontmatter.lastModified)
  .utc()
  .format("YYYY-MM-DD");
// End Get GIT last modified time

import MarkdownLayout from '../../layouts/markdownLayout.astro'

---


<MarkdownLayout frontmatter={entry.data}>
  <div class="dates"><span class="datepublished">Date Published: {new Date(entry.data.datePublished).toISOString().split('T')[0]} </span> {entry.data.datePublished !== lastModified && (<span class="datemodified">Last Modified: {lastModified}</span>)} 
</div> 
  <Content />
</MarkdownLayout>

<style>
  .dates span {
  margin-right: 10px; /* Add space between spans */
}
</style>